package Pucknotes.Server.Section;

import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.Field;
import org.springframework.data.mongodb.core.mapping.FieldType;

/**
 * The Section class represents a section of a course in the Pucknotes application.
 * It is annotated as a MongoDB document, allowing it to be stored in the "sections" collection.
 * Each section is identified by a unique ID and includes details such as course ID, major ID,
 * school ID, semester, list of professors, and the section number.
 */
@Getter
@NoArgsConstructor
@AllArgsConstructor
@Document(collection = "sections")
public class Section {

  /**
   * The unique identifier for this section, it is automatically generated by the database.
   */
  @Id
  private String id;

  /**
   * The unique identifier for the associated course.
   * This field is stored in the database as an ObjectId.
   */
  @Field(targetType = FieldType.OBJECT_ID)
  private String course;

  /**
   * The unique identifier for the associated major.
   * This field is stored in the database as an ObjectId.
   */
  @Field(targetType = FieldType.OBJECT_ID)
  private String major;

  /**
   * The unique identifier for the associated school.
   * This field is stored in the database as an ObjectId.
   */
  @Field(targetType = FieldType.OBJECT_ID)
  private String school;

  /**
   * The semester during which this section is offered.
   */
  private String semester;

  /**
   * A list of unique identifiers representing the professors teaching this section.
   */
  private List<String> professors;

  /**
   * The number assigned to this section.
   * This could represent the section number or identifier within the course.
   */
  private String number;
}
